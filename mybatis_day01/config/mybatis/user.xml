<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespace:命名空间，用于隔离sql语句后续有重要作用 
	#{}:占位符，相当于jdbc的问号
	${}:字符串拼接指令，如果入参为普通数据类型则大括号中只能写value
-->
<mapper namespace="user">
	
	<!-- 
		id：sql的id,语句的唯一标识 
		parameterType:入参的数据类型
		resultType:返回结果的数据类型
	-->
	<select id="getUserById" parameterType="int" resultType="pojo.User">
		SELECT
		  `id`,
		  `username`,
		  `birthday`,
		  `sex`,
		  `address`
		FROM
		  `mybatis`.`user`
		where id = #{id}
	</select>
	
	<select id="getUserByUsername" parameterType="string" resultType="pojo.User">
		SELECT
		  `id`,
		  `username`,
		  `birthday`,
		  `sex`,
		  `address`
		FROM
		  `mybatis`.`user`
		  <!-- 对应MybatisTest中sql语句不同 -->
		<!-- where username like #{name} -->
		where username like '%${value}%'
	</select>
	
	<!-- 
		这里useGeneratedKeys="true" keyProperty="id"配套使用相当于下面selectKey中内容
		使MabytisTest中插入的数据得到id
	 -->
	<insert id="insertUser" parameterType="pojo.User" useGeneratedKeys="true" keyProperty="id">
		<!-- 主键返回
			selectKey:主键返回
			resultType:主键数据类型
			order:指定selectKey何时执行
		 -->
		<!-- 
			<selectKey keyProperty="id" resultType="int" order="AFTER" >
				select last_insert_id()
			</selectKey> 
		-->
		insert into `mybatis`.`user` (
		  `username`,
		  `birthday`,
		  `sex`,
		  `address`
		)
		values
		  (
		    #{username},
		    #{birthday},
		    #{sex},
		    #{address}
		  );
	</insert>
	
	<insert id="insertUserUUID" parameterType="pojo.User" >
		<selectKey keyProperty="uuid2" resultType="string" order="BEFORE" >
			select UUID()
		</selectKey> 
	
		insert into `mybatis`.`user` (
		  `username`,
		  `birthday`,
		  `sex`,
		  `address`,
		  `uuid2`
		)
		values
		  (
		    #{username},
		    #{birthday},
		    #{sex},
		    #{address},
		    #{uuid2}
		  );
	</insert>
	
	<update id="updateUser" parameterType="pojo.User" >
		UPDATE 
			`user`
		SET 
			 `username` = #{username}
		WHERE
			`id` = #{id};
	</update>
	
	<delete id="deleteUser" parameterType="int">
		delete
		from `user`
		where id=#{id}
	</delete>
</mapper>
